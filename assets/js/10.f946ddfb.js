(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{388:function(e,n,r){"use strict";r(327),r(102),r(389),r(391),r(113),r(392),r(74),r(10),r(315),r(28),r(393),r(397),r(398),r(399),r(401),r(402),r(403),r(404),r(405),r(406),r(407),r(408),r(409),r(410),r(411),r(413),r(414),r(415),r(416),r(417),r(418),r(419),r(420),r(421),r(422),r(423),r(104),r(34),r(424);var t=r(428),i=r(429);e.exports={start:function(){var e=document.getElementById("canvas-bg");Ee();var n={SIM_RESOLUTION:128,DYE_RESOLUTION:1024,CAPTURE_RESOLUTION:512,DENSITY_DISSIPATION:1,VELOCITY_DISSIPATION:.2,PRESSURE:.8,PRESSURE_ITERATIONS:20,CURL:30,SPLAT_RADIUS:.25,SPLAT_FORCE:6e3,SHADING:!0,COLORFUL:!0,COLOR_UPDATE_SPEED:10,PAUSED:!1,BACK_COLOR:{r:0,g:0,b:0},TRANSPARENT:!1,BLOOM:!0,BLOOM_ITERATIONS:8,BLOOM_RESOLUTION:256,BLOOM_INTENSITY:.8,BLOOM_THRESHOLD:.6,BLOOM_SOFT_KNEE:.7,SUNRAYS:!0,SUNRAYS_RESOLUTION:196,SUNRAYS_WEIGHT:1};function r(){this.id=-1,this.texcoordX=0,this.texcoordY=0,this.prevTexcoordX=0,this.prevTexcoordY=0,this.deltaX=0,this.deltaY=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}var o=[],a=[];o.push(new r);var u=function(e){var n,r,t={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1},i=e.getContext("webgl2",t),o=!!i;o||(i=e.getContext("webgl",t)||e.getContext("experimental-webgl",t));o?(i.getExtension("EXT_color_buffer_float"),r=i.getExtension("OES_texture_float_linear")):(n=i.getExtension("OES_texture_half_float"),r=i.getExtension("OES_texture_half_float_linear"));i.clearColor(0,0,0,1);var a,u,v,f=o?i.HALF_FLOAT:n.HALF_FLOAT_OES;o?(a=c(i,i.RGBA16F,i.RGBA,f),u=c(i,i.RG16F,i.RG,f),v=c(i,i.R16F,i.RED,f)):(a=c(i,i.RGBA,i.RGBA,f),u=c(i,i.RGBA,i.RGBA,f),v=c(i,i.RGBA,i.RGBA,f));return{gl:i,ext:{formatRGBA:a,formatRG:u,formatR:v,halfFloatTexType:f,supportLinearFiltering:r}}}(e),v=u.gl,f=u.ext;function c(e,n,r,t){if(!function(e,n,r,t){var i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,n,4,4,0,r,t,null);var o=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0),e.checkFramebufferStatus(e.FRAMEBUFFER)==e.FRAMEBUFFER_COMPLETE}(e,n,r,t))switch(n){case e.R16F:return c(e,e.RG16F,e.RG,t);case e.RG16F:return c(e,e.RGBA16F,e.RGBA,t);default:return null}return{internalFormat:n,format:r}}/Mobi|Android/i.test(navigator.userAgent)&&(n.DYE_RESOLUTION=512),f.supportLinearFiltering||(n.DYE_RESOLUTION=512,n.SHADING=!1,n.BLOOM=!1,n.SUNRAYS=!1);var l=function(){function e(n,r){t(this,e),this.vertexShader=n,this.fragmentShaderSource=r,this.programs=[],this.activeProgram=null,this.uniforms=[]}return i(e,[{key:"setKeywords",value:function(e){for(var n=0,r=0;r<e.length;r++)n+=Ue(e[r]);var t=this.programs[n];if(null==t){var i=T(v.FRAGMENT_SHADER,this.fragmentShaderSource,e);t=s(this.vertexShader,i),this.programs[n]=t}t!=this.activeProgram&&(this.uniforms=h(t),this.activeProgram=t)}},{key:"bind",value:function(){v.useProgram(this.activeProgram)}}]),e}(),m=function(){function e(n,r){t(this,e),this.uniforms={},this.program=s(n,r),this.uniforms=h(this.program)}return i(e,[{key:"bind",value:function(){v.useProgram(this.program)}}]),e}();function s(e,n){var r=v.createProgram();return v.attachShader(r,e),v.attachShader(r,n),v.linkProgram(r),v.getProgramParameter(r,v.LINK_STATUS)||console.trace(v.getProgramInfoLog(r)),r}function h(e){for(var n=[],r=v.getProgramParameter(e,v.ACTIVE_UNIFORMS),t=0;t<r;t++){var i=v.getActiveUniform(e,t).name;n[i]=v.getUniformLocation(e,i)}return n}function T(e,n,r){n=function(e,n){if(null==n)return e;var r="";return n.forEach((function(e){r+="#define "+e+"\n"})),r+e}(n,r);var t=v.createShader(e);return v.shaderSource(t,n),v.compileShader(t),v.getShaderParameter(t,v.COMPILE_STATUS)||console.trace(v.getShaderInfoLog(t)),t}var d,E,x,g,R,p,S,D,_,A=T(v.VERTEX_SHADER,"\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        vL = vUv - vec2(texelSize.x, 0.0);\n        vR = vUv + vec2(texelSize.x, 0.0);\n        vT = vUv + vec2(0.0, texelSize.y);\n        vB = vUv - vec2(0.0, texelSize.y);\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),y=T(v.VERTEX_SHADER,"\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        float offset = 1.33333333;\n        vL = vUv - texelSize * offset;\n        vR = vUv + texelSize * offset;\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),U=T(v.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = texture2D(uTexture, vUv) * 0.29411764;\n        sum += texture2D(uTexture, vL) * 0.35294117;\n        sum += texture2D(uTexture, vR) * 0.35294117;\n        gl_FragColor = sum;\n    }\n"),L=T(v.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        gl_FragColor = texture2D(uTexture, vUv);\n    }\n"),F=T(v.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float value;\n\n    void main () {\n        gl_FragColor = value * texture2D(uTexture, vUv);\n    }\n"),w=T(v.FRAGMENT_SHADER,"\n    precision mediump float;\n\n    uniform vec4 color;\n\n    void main () {\n        gl_FragColor = color;\n    }\n"),O=T(v.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float aspectRatio;\n\n    #define SCALE 25.0\n\n    void main () {\n        vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n        float v = mod(uv.x + uv.y, 2.0);\n        v = v * 0.1 + 0.8;\n        gl_FragColor = vec4(vec3(v), 1.0);\n    }\n"),b=T(v.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform vec3 curve;\n    uniform float threshold;\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n        float br = max(c.r, max(c.g, c.b));\n        float rq = clamp(br - curve.x, 0.0, curve.y);\n        rq = curve.z * rq * rq;\n        c *= max(rq, br - threshold) / max(br, 0.0001);\n        gl_FragColor = vec4(c, 0.0);\n    }\n"),N=T(v.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum;\n    }\n"),B=T(v.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform float intensity;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum * intensity;\n    }\n"),I=T(v.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 c = texture2D(uTexture, vUv);\n        float br = max(c.r, max(c.g, c.b));\n        c.a = 1.0 - min(max(br * 20.0, 0.0), 0.8);\n        gl_FragColor = c;\n    }\n"),P=T(v.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float weight;\n\n    #define ITERATIONS 16\n\n    void main () {\n        float Density = 0.3;\n        float Decay = 0.95;\n        float Exposure = 0.7;\n\n        vec2 coord = vUv;\n        vec2 dir = vUv - 0.5;\n\n        dir *= 1.0 / float(ITERATIONS) * Density;\n        float illuminationDecay = 1.0;\n\n        float color = texture2D(uTexture, vUv).a;\n\n        for (int i = 0; i < ITERATIONS; i++)\n        {\n            coord -= dir;\n            float col = texture2D(uTexture, coord).a;\n            color += col * illuminationDecay * weight;\n            illuminationDecay *= Decay;\n        }\n\n        gl_FragColor = vec4(color * Exposure, 0.0, 0.0, 1.0);\n    }\n"),M=T(v.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTarget;\n    uniform float aspectRatio;\n    uniform vec3 color;\n    uniform vec2 point;\n    uniform float radius;\n\n    void main () {\n        vec2 p = vUv - point.xy;\n        p.x *= aspectRatio;\n        vec3 splat = exp(-dot(p, p) / radius) * color;\n        vec3 base = texture2D(uTarget, vUv).xyz;\n        gl_FragColor = vec4(base + splat, 1.0);\n    }\n"),X=T(v.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform vec2 dyeTexelSize;\n    uniform float dt;\n    uniform float dissipation;\n\n    vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n        vec2 st = uv / tsize - 0.5;\n\n        vec2 iuv = floor(st);\n        vec2 fuv = fract(st);\n\n        vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n        vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n        vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n        vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n        return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n    }\n\n    void main () {\n    #ifdef MANUAL_FILTERING\n        vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n        vec4 result = bilerp(uSource, coord, dyeTexelSize);\n    #else\n        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n        vec4 result = texture2D(uSource, coord);\n    #endif\n        float decay = 1.0 + dissipation * dt;\n        gl_FragColor = result / decay;\n    }",f.supportLinearFiltering?null:["MANUAL_FILTERING"]),C=T(v.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).x;\n        float R = texture2D(uVelocity, vR).x;\n        float T = texture2D(uVelocity, vT).y;\n        float B = texture2D(uVelocity, vB).y;\n\n        vec2 C = texture2D(uVelocity, vUv).xy;\n        if (vL.x < 0.0) { L = -C.x; }\n        if (vR.x > 1.0) { R = -C.x; }\n        if (vT.y > 1.0) { T = -C.y; }\n        if (vB.y < 0.0) { B = -C.y; }\n\n        float div = 0.5 * (R - L + T - B);\n        gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n    }\n"),z=T(v.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).y;\n        float R = texture2D(uVelocity, vR).y;\n        float T = texture2D(uVelocity, vT).x;\n        float B = texture2D(uVelocity, vB).x;\n        float vorticity = R - L - T + B;\n        gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n    }\n"),G=T(v.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uCurl;\n    uniform float curl;\n    uniform float dt;\n\n    void main () {\n        float L = texture2D(uCurl, vL).x;\n        float R = texture2D(uCurl, vR).x;\n        float T = texture2D(uCurl, vT).x;\n        float B = texture2D(uCurl, vB).x;\n        float C = texture2D(uCurl, vUv).x;\n\n        vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n        force /= length(force) + 0.0001;\n        force *= curl * C;\n        force.y *= -1.0;\n\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity += force * dt;\n        velocity = min(max(velocity, -1000.0), 1000.0);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n"),Y=T(v.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uDivergence;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        float C = texture2D(uPressure, vUv).x;\n        float divergence = texture2D(uDivergence, vUv).x;\n        float pressure = (L + R + B + T - divergence) * 0.25;\n        gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n    }\n"),H=T(v.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity.xy -= vec2(R - L, T - B);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n"),V=(v.bindBuffer(v.ARRAY_BUFFER,v.createBuffer()),v.bufferData(v.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),v.STATIC_DRAW),v.bindBuffer(v.ELEMENT_ARRAY_BUFFER,v.createBuffer()),v.bufferData(v.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),v.STATIC_DRAW),v.vertexAttribPointer(0,2,v.FLOAT,!1,0,0),v.enableVertexAttribArray(0),function(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];null==e?(v.viewport(0,0,v.drawingBufferWidth,v.drawingBufferHeight),v.bindFramebuffer(v.FRAMEBUFFER,null)):(v.viewport(0,0,e.width,e.height),v.bindFramebuffer(v.FRAMEBUFFER,e.fbo)),n&&(v.clearColor(0,0,0,1),v.clear(v.COLOR_BUFFER_BIT)),v.drawElements(v.TRIANGLES,6,v.UNSIGNED_SHORT,0)}),k=[],W=function(e){var n=v.createTexture();v.bindTexture(v.TEXTURE_2D,n),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MIN_FILTER,v.LINEAR),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MAG_FILTER,v.LINEAR),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_S,v.REPEAT),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_T,v.REPEAT),v.texImage2D(v.TEXTURE_2D,0,v.RGB,1,1,0,v.RGB,v.UNSIGNED_BYTE,new Uint8Array([255,255,255]));var r={texture:n,width:1,height:1,attach:function(e){return v.activeTexture(v.TEXTURE0+e),v.bindTexture(v.TEXTURE_2D,n),e}},t=new Image;return t.onload=function(){r.width=t.width,r.height=t.height,v.bindTexture(v.TEXTURE_2D,n),v.texImage2D(v.TEXTURE_2D,0,v.RGB,v.RGB,v.UNSIGNED_BYTE,t)},t.src=e,r}("LDR_LLL1_0.png"),K=new m(y,U),q=new m(A,L),J=new m(A,F),j=new m(A,w),$=new m(A,O),Q=new m(A,b),Z=new m(A,N),ee=new m(A,B),ne=new m(A,I),re=new m(A,P),te=new m(A,M),ie=new m(A,X),oe=new m(A,C),ae=new m(A,z),ue=new m(A,G),ve=new m(A,Y),fe=new m(A,H),ce=new l(A,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uSunrays;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    uniform vec2 texelSize;\n\n    vec3 linearToGamma (vec3 color) {\n        color = max(color, vec3(0));\n        return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n    }\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n\n    #ifdef SHADING\n        vec3 lc = texture2D(uTexture, vL).rgb;\n        vec3 rc = texture2D(uTexture, vR).rgb;\n        vec3 tc = texture2D(uTexture, vT).rgb;\n        vec3 bc = texture2D(uTexture, vB).rgb;\n\n        float dx = length(rc) - length(lc);\n        float dy = length(tc) - length(bc);\n\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        c *= diffuse;\n    #endif\n\n    #ifdef BLOOM\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n    #endif\n\n    #ifdef SUNRAYS\n        float sunrays = texture2D(uSunrays, vUv).r;\n        c *= sunrays;\n    #ifdef BLOOM\n        bloom *= sunrays;\n    #endif\n    #endif\n\n    #ifdef BLOOM\n        float noise = texture2D(uDithering, vUv * ditherScale).r;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 255.0;\n        bloom = linearToGamma(bloom);\n        c += bloom;\n    #endif\n\n        float a = max(c.r, max(c.g, c.b));\n        gl_FragColor = vec4(c, a);\n    }\n");function le(){var e=Ae(n.SIM_RESOLUTION),r=Ae(n.DYE_RESOLUTION),t=f.halfFloatTexType,i=f.formatRGBA,o=f.formatRG,a=f.formatR,u=f.supportLinearFiltering?v.LINEAR:v.NEAREST;v.disable(v.BLEND),d=null==d?se(r.width,r.height,i.internalFormat,i.format,t,u):he(d,r.width,r.height,i.internalFormat,i.format,t,u),E=null==E?se(e.width,e.height,o.internalFormat,o.format,t,u):he(E,e.width,e.height,o.internalFormat,o.format,t,u),x=me(e.width,e.height,a.internalFormat,a.format,t,v.NEAREST),g=me(e.width,e.height,a.internalFormat,a.format,t,v.NEAREST),R=se(e.width,e.height,a.internalFormat,a.format,t,v.NEAREST),function(){var e=Ae(n.BLOOM_RESOLUTION),r=f.halfFloatTexType,t=f.formatRGBA,i=f.supportLinearFiltering?v.LINEAR:v.NEAREST;p=me(e.width,e.height,t.internalFormat,t.format,r,i),k.length=0;for(var o=0;o<n.BLOOM_ITERATIONS;o++){var a=e.width>>o+1,u=e.height>>o+1;if(a<2||u<2)break;var c=me(a,u,t.internalFormat,t.format,r,i);k.push(c)}}(),function(){var e=Ae(n.SUNRAYS_RESOLUTION),r=f.halfFloatTexType,t=f.formatR,i=f.supportLinearFiltering?v.LINEAR:v.NEAREST;S=me(e.width,e.height,t.internalFormat,t.format,r,i),D=me(e.width,e.height,t.internalFormat,t.format,r,i)}()}function me(e,n,r,t,i,o){v.activeTexture(v.TEXTURE0);var a=v.createTexture();v.bindTexture(v.TEXTURE_2D,a),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MIN_FILTER,o),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MAG_FILTER,o),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_S,v.CLAMP_TO_EDGE),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_T,v.CLAMP_TO_EDGE),v.texImage2D(v.TEXTURE_2D,0,r,e,n,0,t,i,null);var u=v.createFramebuffer();return v.bindFramebuffer(v.FRAMEBUFFER,u),v.framebufferTexture2D(v.FRAMEBUFFER,v.COLOR_ATTACHMENT0,v.TEXTURE_2D,a,0),v.viewport(0,0,e,n),v.clear(v.COLOR_BUFFER_BIT),{texture:a,fbo:u,width:e,height:n,texelSizeX:1/e,texelSizeY:1/n,attach:function(e){return v.activeTexture(v.TEXTURE0+e),v.bindTexture(v.TEXTURE_2D,a),e}}}function se(e,n,r,t,i,o){var a=me(e,n,r,t,i,o),u=me(e,n,r,t,i,o);return{width:e,height:n,texelSizeX:a.texelSizeX,texelSizeY:a.texelSizeY,get read(){return a},set read(e){a=e},get write(){return u},set write(e){u=e},swap:function(){var e=a;a=u,u=e}}}function he(e,n,r,t,i,o,a){return e.width==n&&e.height==r||(e.read=function(e,n,r,t,i,o,a){var u=me(n,r,t,i,o,a);return q.bind(),v.uniform1i(q.uniforms.uTexture,e.attach(0)),V(u),u}(e.read,n,r,t,i,o,a),e.write=me(n,r,t,i,o,a),e.width=n,e.height=r,e.texelSizeX=1/n,e.texelSizeY=1/r),e}_=[],n.SHADING&&_.push("SHADING"),n.BLOOM&&_.push("BLOOM"),n.SUNRAYS&&_.push("SUNRAYS"),ce.setKeywords(_),le(),ge(parseInt(20*Math.random())+5);var Te=Date.now(),de=0;function Ee(){var n=ye(e.clientWidth),r=ye(e.clientHeight);return(e.width!=n||e.height!=r)&&(e.width=n,e.height=r,!0)}function xe(r){var t,i,o,a;n.BLOOM&&function(e,r){if(k.length<2)return;var t=r;v.disable(v.BLEND),Q.bind();var i=n.BLOOM_THRESHOLD*n.BLOOM_SOFT_KNEE+1e-4,o=n.BLOOM_THRESHOLD-i,a=2*i,u=.25/i;v.uniform3f(Q.uniforms.curve,o,a,u),v.uniform1f(Q.uniforms.threshold,n.BLOOM_THRESHOLD),v.uniform1i(Q.uniforms.uTexture,e.attach(0)),V(t),Z.bind();for(var f=0;f<k.length;f++){var c=k[f];v.uniform2f(Z.uniforms.texelSize,t.texelSizeX,t.texelSizeY),v.uniform1i(Z.uniforms.uTexture,t.attach(0)),V(c),t=c}v.blendFunc(v.ONE,v.ONE),v.enable(v.BLEND);for(var l=k.length-2;l>=0;l--){var m=k[l];v.uniform2f(Z.uniforms.texelSize,t.texelSizeX,t.texelSizeY),v.uniform1i(Z.uniforms.uTexture,t.attach(0)),v.viewport(0,0,m.width,m.height),V(m),t=m}v.disable(v.BLEND),ee.bind(),v.uniform2f(ee.uniforms.texelSize,t.texelSizeX,t.texelSizeY),v.uniform1i(ee.uniforms.uTexture,t.attach(0)),v.uniform1f(ee.uniforms.intensity,n.BLOOM_INTENSITY),V(r)}(d.read,p),n.SUNRAYS&&(t=d.read,i=d.write,o=S,v.disable(v.BLEND),ne.bind(),v.uniform1i(ne.uniforms.uTexture,t.attach(0)),V(i),re.bind(),v.uniform1f(re.uniforms.weight,n.SUNRAYS_WEIGHT),v.uniform1i(re.uniforms.uTexture,i.attach(0)),V(o),function(e,n,r){K.bind();for(var t=0;t<r;t++)v.uniform2f(K.uniforms.texelSize,e.texelSizeX,0),v.uniform1i(K.uniforms.uTexture,e.attach(0)),V(n),v.uniform2f(K.uniforms.texelSize,0,e.texelSizeY),v.uniform1i(K.uniforms.uTexture,n.attach(0)),V(e)}(S,D,1)),null!=r&&n.TRANSPARENT?v.disable(v.BLEND):(v.blendFunc(v.ONE,v.ONE_MINUS_SRC_ALPHA),v.enable(v.BLEND)),n.TRANSPARENT||function(e,n){j.bind(),v.uniform4f(j.uniforms.color,n.r,n.g,n.b,1),V(e)}(r,{r:(a=n.BACK_COLOR).r/255,g:a.g/255,b:a.b/255}),null==r&&n.TRANSPARENT&&function(n){$.bind(),v.uniform1f($.uniforms.aspectRatio,e.width/e.height),V(n)}(r),function(e){var r=null==e?v.drawingBufferWidth:e.width,t=null==e?v.drawingBufferHeight:e.height;ce.bind(),n.SHADING&&v.uniform2f(ce.uniforms.texelSize,1/r,1/t);if(v.uniform1i(ce.uniforms.uTexture,d.read.attach(0)),n.BLOOM){v.uniform1i(ce.uniforms.uBloom,p.attach(1)),v.uniform1i(ce.uniforms.uDithering,W.attach(2));var i=function(e,n,r){return{x:n/e.width,y:r/e.height}}(W,r,t);v.uniform2f(ce.uniforms.ditherScale,i.x,i.y)}n.SUNRAYS&&v.uniform1i(ce.uniforms.uSunrays,S.attach(3));V(e)}(r)}function ge(e){for(var n=0;n<e;n++){var r=_e();r.r*=10,r.g*=10,r.b*=10,Re(Math.random(),Math.random(),1e3*(Math.random()-.5),1e3*(Math.random()-.5),r)}}function Re(r,t,i,o,a){te.bind(),v.uniform1i(te.uniforms.uTarget,E.read.attach(0)),v.uniform1f(te.uniforms.aspectRatio,e.width/e.height),v.uniform2f(te.uniforms.point,r,t),v.uniform3f(te.uniforms.color,i,o,0),v.uniform1f(te.uniforms.radius,function(n){var r=e.width/e.height;r>1&&(n*=r);return n}(n.SPLAT_RADIUS/100)),V(E.write),E.swap(),v.uniform1i(te.uniforms.uTarget,d.read.attach(0)),v.uniform3f(te.uniforms.color,a.r,a.g,a.b),V(d.write),d.swap()}function pe(n,r,t,i){n.id=r,n.down=!0,n.moved=!1,n.texcoordX=t/e.width,n.texcoordY=1-i/e.height,n.prevTexcoordX=n.texcoordX,n.prevTexcoordY=n.texcoordY,n.deltaX=0,n.deltaY=0,n.color=_e()}function Se(n,r,t){n.prevTexcoordX=n.texcoordX,n.prevTexcoordY=n.texcoordY,n.texcoordX=r/e.width,n.texcoordY=1-t/e.height,n.deltaX=function(n){var r=e.width/e.height;r<1&&(n*=r);return n}(n.texcoordX-n.prevTexcoordX),n.deltaY=function(n){var r=e.width/e.height;r>1&&(n/=r);return n}(n.texcoordY-n.prevTexcoordY),n.moved=Math.abs(n.deltaX)>0||Math.abs(n.deltaY)>0}function De(e){e.down=!1}function _e(){var e=function(e,n,r){var t,i,o,a,u,v,f,c;switch(a=Math.floor(6*e),v=r*(1-n),f=r*(1-(u=6*e-a)*n),c=r*(1-(1-u)*n),a%6){case 0:t=r,i=c,o=v;break;case 1:t=f,i=r,o=v;break;case 2:t=v,i=r,o=c;break;case 3:t=v,i=f,o=r;break;case 4:t=c,i=v,o=r;break;case 5:t=r,i=v,o=f}return{r:t,g:i,b:o}}(Math.random(),1,1);return e.r*=.15,e.g*=.15,e.b*=.15,e}function Ae(e){var n=v.drawingBufferWidth/v.drawingBufferHeight;n<1&&(n=1/n);var r=Math.round(e),t=Math.round(e*n);return v.drawingBufferWidth>v.drawingBufferHeight?{width:t,height:r}:{width:r,height:t}}function ye(e){var n=window.devicePixelRatio||1;return Math.floor(e*n)}function Ue(e){if(0==e.length)return 0;for(var n=0,r=0;r<e.length;r++)n=(n<<5)-n+e.charCodeAt(r),n|=0;return n}!function e(){var r=function(){var e=Date.now(),n=(e-Te)/1e3;return n=Math.min(n,.016666),Te=e,n}();Ee()&&le();(function(e){if(!n.COLORFUL)return;(de+=e*n.COLOR_UPDATE_SPEED)>=1&&(r=de,de=0==(i=1-(t=0))?t:(r-t)%i+t,o.forEach((function(e){e.color=_e()})));var r,t,i})(r),function(){a.length>0&&ge(a.pop());o.forEach((function(e){var r,t,i;e.moved&&(e.moved=!1,t=(r=e).deltaX*n.SPLAT_FORCE,i=r.deltaY*n.SPLAT_FORCE,Re(r.texcoordX,r.texcoordY,t,i,r.color))}))}(),n.PAUSED||function(e){v.disable(v.BLEND),ae.bind(),v.uniform2f(ae.uniforms.texelSize,E.texelSizeX,E.texelSizeY),v.uniform1i(ae.uniforms.uVelocity,E.read.attach(0)),V(g),ue.bind(),v.uniform2f(ue.uniforms.texelSize,E.texelSizeX,E.texelSizeY),v.uniform1i(ue.uniforms.uVelocity,E.read.attach(0)),v.uniform1i(ue.uniforms.uCurl,g.attach(1)),v.uniform1f(ue.uniforms.curl,n.CURL),v.uniform1f(ue.uniforms.dt,e),V(E.write),E.swap(),oe.bind(),v.uniform2f(oe.uniforms.texelSize,E.texelSizeX,E.texelSizeY),v.uniform1i(oe.uniforms.uVelocity,E.read.attach(0)),V(x),J.bind(),v.uniform1i(J.uniforms.uTexture,R.read.attach(0)),v.uniform1f(J.uniforms.value,n.PRESSURE),V(R.write),R.swap(),ve.bind(),v.uniform2f(ve.uniforms.texelSize,E.texelSizeX,E.texelSizeY),v.uniform1i(ve.uniforms.uDivergence,x.attach(0));for(var r=0;r<n.PRESSURE_ITERATIONS;r++)v.uniform1i(ve.uniforms.uPressure,R.read.attach(1)),V(R.write),R.swap();fe.bind(),v.uniform2f(fe.uniforms.texelSize,E.texelSizeX,E.texelSizeY),v.uniform1i(fe.uniforms.uPressure,R.read.attach(0)),v.uniform1i(fe.uniforms.uVelocity,E.read.attach(1)),V(E.write),E.swap(),ie.bind(),v.uniform2f(ie.uniforms.texelSize,E.texelSizeX,E.texelSizeY),f.supportLinearFiltering||v.uniform2f(ie.uniforms.dyeTexelSize,E.texelSizeX,E.texelSizeY);var t=E.read.attach(0);v.uniform1i(ie.uniforms.uVelocity,t),v.uniform1i(ie.uniforms.uSource,t),v.uniform1f(ie.uniforms.dt,e),v.uniform1f(ie.uniforms.dissipation,n.VELOCITY_DISSIPATION),V(E.write),E.swap(),f.supportLinearFiltering||v.uniform2f(ie.uniforms.dyeTexelSize,d.texelSizeX,d.texelSizeY);v.uniform1i(ie.uniforms.uVelocity,E.read.attach(0)),v.uniform1i(ie.uniforms.uSource,d.read.attach(1)),v.uniform1f(ie.uniforms.dissipation,n.DENSITY_DISSIPATION),V(d.write),d.swap()}(r);xe(null),requestAnimationFrame(e)}(),e.addEventListener("mousedown",(function(e){var n=ye(e.offsetX),t=ye(e.offsetY),i=o.find((function(e){return-1==e.id}));null==i&&(i=new r),pe(i,-1,n,t)})),e.addEventListener("mousemove",(function(e){var n=o[0];n.down&&Se(n,ye(e.offsetX),ye(e.offsetY))})),window.addEventListener("mouseup",(function(){De(o[0])})),e.addEventListener("touchstart",(function(e){e.preventDefault();for(var n=e.targetTouches;n.length>=o.length;)o.push(new r);for(var t=0;t<n.length;t++){var i=ye(n[t].pageX),a=ye(n[t].pageY);pe(o[t+1],n[t].identifier,i,a)}})),e.addEventListener("touchmove",(function(e){e.preventDefault();for(var n=e.targetTouches,r=0;r<n.length;r++){var t=o[r+1];if(t.down)Se(t,ye(n[r].pageX),ye(n[r].pageY))}}),!1),window.addEventListener("touchend",(function(e){for(var n=e.changedTouches,r=function(e){var r=o.find((function(r){return r.id==n[e].identifier}));if(null==r)return"continue";De(r)},t=0;t<n.length;t++)r(t)})),window.addEventListener("keydown",(function(e){"KeyP"===e.code&&(n.PAUSED=!n.PAUSED)," "===e.key&&a.push(parseInt(20*Math.random())+5)}))}}},439:function(e,n,r){"use strict";r.r(n);r(388);var t={},i=r(25),o=Object(i.a)(t,(function(){var e=this.$createElement;return(this._self._c||e)("div",{staticClass:"cool-containers"})}),[],!1,null,"1a7e6ab3",null);n.default=o.exports}}]);