(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{388:function(a,t,e){"use strict";e.r(t);var s=e(25),n=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"_3-css3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-css3"}},[a._v("#")]),a._v(" 3.css3")]),a._v(" "),e("h2",{attrs:{id:"基本概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[a._v("#")]),a._v(" 基本概念")]),a._v(" "),e("blockquote",[e("p",[a._v("  CSS3和HTML5没有任何关系！HTML5的骨架中，可以用CSS2.1也可以用CSS3。HTMLxt的骨架中，可以用CSS3的样式。CSS有一个特点，遇见自己不认识的选择器、属性，会静默，不会报错；CSS3没有颠覆传统CSS的写法，依然是k:v对。")])]),a._v(" "),e("blockquote",[e("p",[a._v("  主要变化：伪类、选择器；伪元素；border变化；background变化，渐变、背景尺寸、裁切；transition过渡，干蹦变成动画；transform变形，旋转、斜切变形、3D变形；animation动画；新的盒模型；响应式的一些属性；display：flex。")])]),a._v(" "),e("h2",{attrs:{id:"选择器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#选择器"}},[a._v("#")]),a._v(" 选择器")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('// 属性选择器\ndiv[data-info]\ndiv[data-info = "1”]\ndiv[data-info ^= "h”]\ndiv[data-info $= "3”]\ndiv[data-info ~= "haha”]\ndiv[data-info |= "haha"]\ndiv[data-info *= "haha"]\n')])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 后代（儿子）选择器\np:first-child             位于第1个且第一个为p的儿子\np:last-child              最后1个p儿子（同上理）\np:nth-child(3)            第3个p儿子\np:nth-child(3n + 2)       只要某一个p是别人的3n+2号儿子，就被选择\np:nth-last-child(3n + 2)  只要某一个p是别人的倒数3n+2号儿子，就被选择\np:first-of-type           第1个p类型儿子\np:last-of-type            最后1个p类型儿子\np:nth-of-type(3)          第3个p类型儿子\np:nth-of-type(3n + 2)     只要某一个p是别人的3n+2号p类型儿子，就被选择\np:nth-last-of-type(3n + 2)只要某一个p是别人的倒数3n+2号p类型儿子，就被选择\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 关系选择器\ndiv p   空格表示后代关系\ndiv>p   表示儿子关系\nh3+p    +表示下一个p，就是nextSibling\nh3~p    ~表示后面所有的p，就是nextAll\n")])])]),e("h2",{attrs:{id:"伪类、伪元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#伪类、伪元素"}},[a._v("#")]),a._v(" 伪类、伪元素")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 伪类\n:hover     现在可以给所有元素使用，表示鼠标触碰的时候的样子。\n:focus     得到焦点的控件\n:enabled   有效控件\n:disabled  无效控件\n:empty     空标签\n")])])]),e("blockquote",[e("p",[a._v("  伪元素，CSS3的新特性，两个冒号。::before和::after。::before和::after都是行内元素，必须转块、投标才能设置宽度、高度。必须写content属性，可以值为空，但是不能不写。")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("<style type=’text/css’>\n    p::selection {\n        background-color: pink;   // 反选\n        color: green;\n    }\n    p::first-line {   // 首行\n        color: red;\n    }\n    p::first-letter {     // 首字母\n        font-size: 50px;\n        padding: 10px\n    }\n</style>\n")])])]),e("h2",{attrs:{id:"边框"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#边框"}},[a._v("#")]),a._v(" 边框")]),a._v(" "),e("blockquote",[e("p",[a._v("  border-radius。值可以用px为单位写，也可以写百分比。")])]),a._v(" "),e("h2",{attrs:{id:"阴影"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#阴影"}},[a._v("#")]),a._v(" 阴影")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 盒子阴影，box-shadow\nbox-shadow: 1px 2px 3px 4px red   // 向右偏移，向下偏移，模糊程度，延伸，颜色\n// 可以带多个阴影，用逗号隔开即可\nbox-shadow: 0px 0px 32px 3px red，\n            0px 10px 20px 6px green,\n            0px 10px 30px 9px blue\n// 内阴影\nbox-shadow: inset 1px 2px 3px 4px red\n// 文字阴影，text-shadow.无内阴影，其他与盒子阴影一致\n")])])]),e("h2",{attrs:{id:"background"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#background"}},[a._v("#")]),a._v(" background")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// css2.1中的background：\nbackground-color: red;\nbackground-image: url(images/1.jpg);\nbackground-repeat: no-repeat;\nbackground-position: -100px -50px;\nbackground-attachment: fixed;\n")])])]),e("blockquote",[e("p",[a._v("  css3中background-origin，可以设置第一张背景图的渲染位置，background-clip，可以裁切掉padding区域内的背景图片，保留内容区域的背景图片，这两个属性有三个值，content-box、padding-box、border-box。")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("background: url(img/img.jpg);\nbackground-origin: content-box;\nbackground-clip: content-box;\n// 等价于\nbackground: url(img/img.jpg) content-box;\n")])])]),e("img",{attrs:{src:"http://wx4.sinaimg.cn/mw690/e992a6b1gy1fuzt0d6cn4j20cg0aun2l.jpg",width:"300"}}),a._v(" "),e("blockquote",[e("p",[a._v("  background-size，可以设置背景图片的尺寸，两个属性值可以是像素，也可以使百分比（容器的百分比），还可以设置为cover/contain。cover表示用一张图，以容器左上角为顶点按比例变化直到完全覆盖容器；contain表示，容器正好可以完全容纳一张图片，空白部分背景图repeat填满。")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("background-size: 50px auto;\nbackground-size: 50% auto;\nbackground-size: cover;\n")])])]),e("blockquote",[e("p",[a._v("  background-image,现在可以设置渐变值。")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("background-image： -webkit-linear-gradient(top,red,yellow)\n-webkit-：是前缀，渐变尚在试验阶段，需要加前缀来兼容不同的浏览器内核；\n-webkit-，兼容chrome、safari；\n-moz-，兼容火狐；\n-ms-，兼容IE、edge；\n-o-，兼容欧朋；\nlinear指的是渐变的方式：linear线性、radial辐射；\ngradient的意思是渐变；\n")])])]),e("blockquote",[e("p",[a._v("  css3中，盒子可以携带多个背景图，中间用逗号隔开：")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("background: url(img/img.jpg) content-box, url(img/img2.jpg)\n")])])]),e("blockquote",[e("p",[a._v("  background-image在background-color之上，background-color会覆盖没有图片的区域，与透明、半透明的图片会出现叠加效果。css3属性，overflow-x和overflow-y可以根据情况分开设置，IE8及以下不兼容；-webkit-overflow-scrolling: touch;可以做手机端的兼容处理。")])]),a._v(" "),e("h2",{attrs:{id:"文字溢出自动省略号"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文字溢出自动省略号"}},[a._v("#")]),a._v(" 文字溢出自动省略号")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 单行省略号\ndiv{   \n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n// 多行省略号\ndiv{                 \n    text-overflow: ellipsis;\n    overflow: hidden;\n    display: box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;\n}\n")])])]),e("h2",{attrs:{id:"事件穿透"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件穿透"}},[a._v("#")]),a._v(" 事件穿透")]),a._v(" "),e("blockquote",[e("p",[a._v("  Firefox 3.6+和chrome 2.0+ 以及safari 4.0+都支持这个CSS3属性，IE6/7/8/9都不支持，Opera在SVG中支持该属性但是HTML中不支持。")])]),a._v(" "),e("blockquote",[e("p",[a._v("  创建两个 div 元素，在每个 div 元素上面添加一个遮罩层，其中的文字被盖住了。为了显得有文艺范，div 中的内容引用了莎士比亚的十四行诗。正常情况如下，因为 div 上面有遮罩层，所以无法选中文字。添加 pointer-events: none 之后，就可以穿透遮罩层顺利拷贝文字了。")])]),a._v(" "),e("h2",{attrs:{id:"过渡动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#过渡动画"}},[a._v("#")]),a._v(" 过渡动画")]),a._v(" "),e("blockquote",[e("p",[a._v("  transition属性，在CSS层面实现动画效果，实现借助的不是定时器，而是底层的C++在渲染，动画的质量比JS、JQuery要高。")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("transition: all 1s ease 0s;\n")])])]),e("blockquote",[e("p",[a._v("  属性值有四个参数：transition-property，表示哪个css属性过渡，所有属性过渡则写all；transition-duration，表示动画持续时间，单位是秒，一定要写s；transition-timing-function，表示动画形式，常用的有ease、linear；最后一个是延迟执行的时间。")])]),a._v(" "),e("blockquote",[e("p",[a._v("  几乎所有属性都可以过渡，例如：背景颜色，背景定位、背景图片（呼吸效果）；任何的变形transfrom都能够过渡，但是jQuery是不能的。")])]),a._v(" "),e("blockquote",[e("p",[a._v("  原有的属性为开始点，有变化并且触发就会过渡；任何改变CSS的情况，都可以触发过渡，产生动画：hover；加减类；直接设置CSS类替换。transition属性不能继承。")])]),a._v(" "),e("blockquote",[e("p",[a._v("  用transition来制作动画，把CSS写在JS里，便于进行设置；使用setTimeout来切换动画和干蹦，注意在干蹦时要把transition设为none；想实现动画依次执行就要使用setTimeout来实现，要注意中间的时间设置；新创建的元素，来不及准备transition，要用延时器来设置transition属性：")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$(‘input’).click(function(){\n    $(‘<div></div>’).appendTo(‘body’);\n    setTimeout(function(){\n        $(‘div’).css({\n            ’transition’: ‘all 1s ease 0s’,\n            ‘left’: 1000\n        })\n    }, 0);\n})\n")])])]),e("h2",{attrs:{id:"变形"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#变形"}},[a._v("#")]),a._v(" 变形")]),a._v(" "),e("blockquote",[e("p",[a._v("  transform属性，最重要的CSS3改变。让元素在2D、3D进行形状的变化。变形可以被过渡，触发优质的动画。")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 2D变形\ntransform: rotate(30deg)     旋转，单位是degree的简写deg\ntransform: skew(10deg,20deg) 斜切\ntransform: scale(0.5)         缩放，取值范围0-1\ntransform: none               没有形变\ntransform: rotate(30deg) skew(10deg,20deg) scale(0.5)\n")])])]),e("blockquote",[e("p",[a._v("  3D变形，2013年谷歌推出了Chrome36，正式宣告CSS进入了3D时代。用了X、Y、Z就表明是处于3D情况下的变形；rotateX/Y/Z（）指的是在坐标系上沿着坐标轴空间旋转，区别于rotate（旋转）；translate3D（）的值可以为数值像素，也可以是百分比，指的是自己的宽、高；translateX/Y/Z（）指的是空间坐标系的X/Y/Z方向，数值为像素。")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("transform: rotateX(30deg)                  // 绕X轴旋转\ntransform: rotateY(30deg)                  // 绕Y轴旋转\ntransform: translate3D(10px,20px,30px)     // 空间移动\n")])])]),e("blockquote",[e("p",[a._v("  注意3D变形要设置父盒子即舞台的景深属性；景深指的是看元素的视觉距离（以及伴随的角度），css3中给变形元素给父标签添加perspective属性值可以模拟景深。")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 舞台元素，携带景深属性，perspective：300px\n<div>\n    <img src=‘images/ererte.jpg’ />  // 演员，携带3D变形transform: rotateX(30deg) \n</div>\n")])])]),e("blockquote",[e("p",[a._v("  要注意所有的参照坐标系是元素固有的稳定坐标系（改变的是坐标系位置），实际上，元素并没有真正的变形，只是改变了我们看元素的角度，或者说是元素呈现给我们的角度改变了（3D效果）。所以当3D变形的值连写时，是从左到右，从上到下的执行，不同的顺序会产生不同的结果：但是在执行transition动画的时候是同时（协同）执行的。")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v(".c1 {\n    transform: rotateX(40deg) rotateY(40deg)\n}\n.c2 {\n    transform: rotateY(40deg) rotateX(40deg)\n}\n")])])]),e("blockquote",[e("p",[a._v("  变形透视的中点transform-origin属性，默认是舞台的中点：")])]),a._v(" "),e("img",{attrs:{src:"http://wx3.sinaimg.cn/mw690/e992a6b1gy1fuztgf1quij20dc09ojua.jpg",width:"300"}}),a._v(" "),e("blockquote",[e("p",[a._v("  背面隐藏backface-visibility：hidden；显示背面的时候，隐藏。")])]),a._v(" "),e("h2",{attrs:{id:"zepto-velocity"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zepto-velocity"}},[a._v("#")]),a._v(" zepto\\velocity")]),a._v(" "),e("blockquote",[e("p",[a._v("  基于jQuery写的JS库，语言风格与jQuery一样；兼容IE10以上的浏览器，适合做移动端动画库；jQuery1做了大量的工作来兼容IE6、7、8，jQuery3不兼容IE6、7，但兼容IE8仍做了很多工作。")])]),a._v(" "),e("h2",{attrs:{id:"coverflow效果"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#coverflow效果"}},[a._v("#")]),a._v(" CoverFlow效果")]),a._v(" "),e("blockquote",[e("p",[a._v("  不是轮播，而是单向的操作；转变思维：之前做任何样式设置都是给元素添加样式，来实现不同的元素有不同的样式。现在这个案例的原理是：先设置好样式，然后给样式添加元素；批量设置和添加，可以先用数组预设好，然后通过遍历来匹配；遍历的长度、方式、始终点不一样，实现出不同的页面效果：轮播、运动等等；")])]),a._v(" "),e("img",{attrs:{src:"http://wx2.sinaimg.cn/mw690/e992a6b1gy1fuztiy8r5ij209a04lmyp.jpg",width:"400"}}),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 这个效果有一个经典的算法在里面，就是类名的轮替。现在的结构：\n<li class=‘l4’></li>\n<li class=‘l3’></li>\n<li class=‘l2’></li>\n<li class=‘l1’></li>\n<li class=‘center’></li>\n<li class=‘r1’></li>\n<li class=‘r2’></li>\n<li class=‘r3’></li>\n<li class=‘r4’></li>\n")])])]),e("blockquote",[e("p",[a._v("  使用数组来表示：[l4,l3,l2,l1,center,r1,r2,r3,r4];点击一次右按钮：[l5,l4,l3,l2,l1,center,r1,r2,r3];再点击一次右按钮：[l6,l5,l4,l3,l2,l1,center,r1,r2]。一个大的数组，每一项对应一个类名，每个类名预设好迭次样式：")])]),a._v(" "),e("img",{attrs:{src:"http://wx4.sinaimg.cn/mw690/e992a6b1gy1fuztl7guf7j20va060wg7.jpg",width:"400"}}),a._v("\n## 优酷经典轮播\n>  经典的异形滚动轮播，运动机构单元有5个（每次显示的只有五个）。\n"),e("img",{attrs:{src:"http://wx2.sinaimg.cn/mw690/e992a6b1gy1fuztmsncpkj210a0b2dtc.jpg",width:"400"}}),a._v(" "),e("blockquote",[e("p",[a._v("  转变思维：样式固定，图片为图片数组，对图片进行push、pop或者unshift、shift操作，改变图片的对应的样式位置，来实现切换操作。")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("<li data-src=‘img-l2’></li>\n<li data-src=‘img-l1’></li>\n<li data-src=‘img-c’></li>\n<li data-src=‘img-r1’></li>\n<li data-src=‘img-r2’></li>\n")])])]),e("h2",{attrs:{id:"轮播图的写法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#轮播图的写法"}},[a._v("#")]),a._v(" 轮播图的写法")]),a._v(" "),e("blockquote",[e("p",[a._v("  呼吸轮播图；跑马灯轮播图，火车法、三位置法；间歇模型；")])]),a._v(" "),e("h2",{attrs:{id:"animation动画属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#animation动画属性"}},[a._v("#")]),a._v(" animation动画属性")]),a._v(" "),e("blockquote",[e("p",[a._v("  animation属性CSS3的动画属性，跟过渡使用上有区别。之前的过渡需要人为的触发：要么用hover、要么用改变类名的方法；而animation则可以自己设置直接动画。这个属性可以写七个属性值：动画名称，动画时间，动画方式，延迟，动画次数，是否逆动画，是否停止在终点。动画次数可以是数字，也可以是infinite；是否逆动画，alternate在偶数次执行反方向动画，forwards不执行；")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("div {\n    width: 70px;\n    height: 70px;\n    position: absolate;\n    top: 100px;\n    left 100px;\n    animation: move 1s ease 0s 5 infinite alternate false;\n}\n@-webkit-keyframes move {\n    from{\n        left: 100px;\n    }\n    to{\n        left: 600px;\n    }\n}\n具体设置动画过程，可以用百分比：\n@-webkit-keyframes move {\n    0% {\n        left: 100px;\n    }\n    60%{\n        left: 600px;\n    }\n    100%{\n        left: 1000px\n    }\n}\n")])])]),e("blockquote",[e("p",[a._v("  小技巧：不一定动画结束的时候是100%，可以在40%的时候结束动画，此时就空余了60%的时间，可以在这个元素60%的等待事件中，其他元素进行运动，用以协调动画。")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 动画的停止，可以给元素动态添加和删除：\n-webkit-animation-play-state: paused;\n")])])]),e("h2",{attrs:{id:"前端编程兼容策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端编程兼容策略"}},[a._v("#")]),a._v(" 前端编程兼容策略")]),a._v(" "),e("blockquote",[e("p",[a._v("  平稳退化（优雅降级）：首先使用最新的技术面向高级浏览器构建最强的功能及用户体验，然后针对低级的浏览器进行限制，逐步衰减那些无法被支持的功能及体验。使用平稳退化技术时，你必须首先完整的实现了网站，其中包括所有的功能和特效。 然后再为那些无法支持所有功能的浏览器增加候选方案，使之在旧市的浏览器上可以以某种形式降级体验却不至于完全失效。")])]),a._v(" "),e("blockquote",[e("p",[a._v("  渐进增强：渐进增强的概念就是，指从最基本的可用性出发，在保证站点页面在低级浏览器中的可用性和可访问性的基础上，逐步增强功能及提高用户体验。我们应该先让网站能够正常工作于尽可能旧的浏览器上，然后不断为它在新型浏览器上实现更多的增强和改进。随着时间的推移，当越来越多的人开始升级浏览器而浏览器本身的支持度也不断提升时，就会有越来越多的人体验到这些增强和改进，它持续有效的使网站越来越好，只要一次实现，它就让网站的体验与时俱进。")])]),a._v(" "),e("h2",{attrs:{id:"动画进场出场"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动画进场出场"}},[a._v("#")]),a._v(" 动画进场出场")]),a._v(" "),e("blockquote",[e("p",[a._v("  原理是第动画时间的控制；使用节流锁：进场动画的终点才开锁；退场与入场的顺序，是一种责任链模式：在责任链模式里，很多对象由每一个对象对其下家的引用而连接起来形成一条链。请求在这个链上传递，直到链上的某一个对象决定处理此请求。发出这个请求的客户端并不知道链上的哪一个对象最终处理这个请求，这使得系统可以在不影响客户端的情况下动态地重新组织和分配责任。")])]),a._v(" "),e("h2",{attrs:{id:"响应式页面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#响应式页面"}},[a._v("#")]),a._v(" 响应式页面")]),a._v(" "),e("blockquote",[e("p",[a._v("  响应式网页设计(Responsive Web Design，RWD设计)，根据用户打开页面的窗口大小,调整页面布局；大屏用户有大版心，不至于浪费显示空间；小屏用户用小版心，纵向滚动（横向不出现滚动条）查看内容。国内大多数网站使用的是局部响应式，指的是屏幕缩小到一定程度，不再继续响应式变化，不能变为移动端使用的页面。但是用户使用移动端访问时，服务器会进行设备识别，跳到不同的页面，可能是URL的切换，也可能是呈递不同的视图。")])]),a._v(" "),e("blockquote",[e("p",[a._v("  国内这样的好处：PC页面和手机页面是两个网站HTML完全不一样，这样给手机用户节约了流量，不用下载PC端过多的HTML标签。")])]),a._v(" "),e("blockquote",[e("p",[a._v("  国外的网站通常都是全响应网站（这也是BootStrap的哲学），一个比较好的RWD网页展览网站：http://mediaqueri.es/。")])]),a._v(" "),e("blockquote",[e("p",[a._v("  最常用的方式是一个HTML对应多个CSS，根据视口的宽度的不同调整使用不同的CSS样式表。老外的网站实际上对中国有点水土不服，因为手机流量太贵，用手机加载PC的DOM结构、用图是不合理的。")])]),a._v(" "),e("h2",{attrs:{id:"css3媒体查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css3媒体查询"}},[a._v("#")]),a._v(" CSS3媒体查询")]),a._v(" "),e("blockquote",[e("p",[a._v("  CSS3中link标签增加了media属性，表示使用这个样式表的条件是什么。叫做媒体查询（media query）。")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('// 写在link标签中：\n<link rel="stylesheet" href="css/base1.css" media="screen and (min-width: 980px)">\n<link rel="stylesheet" href="css/base2.css" media="screen and (min-width: 600px) and(max-width: 979px)">\n<link rel="stylesheet" href="css/base3.css" media="screen and (max-width: 599px)">\n')])])]),e("blockquote",[e("p",[a._v("  screen表示屏幕设备。and表示且。从IE9开始部分支持，而IE8认为加上media属性的link标签是错误标签，此时不会加载任何带有media属性的link标签。所以要留活口，把最大屏幕尺寸对应的css去掉media属性：")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('<link rel="stylesheet" href="css/base1.css">\n<link rel="stylesheet" href="css/base2.css" media="screen and (min-width: 600px) and(max-width: 979px)">\n<link rel="stylesheet" href="css/base3.css" media="screen and (max-width: 599px)">\n')])])]),e("blockquote",[e("p",[a._v("  这样一来，假如用户是700宽度，此时会加载base1和base2两个样式表（IE8此时仅仅会加载base1，视base2为错误）。IE8此时没有响应式功能了。此时我们的制作，就是层叠思维，而不是重写思维。")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 写在内嵌CSS里面：\n<style type='text/css'>\n@media screen and (min-width: 700px) and (max-width: 900px){\n    div{\n        color: red\n    }\n}\n@media screen and (max-width: 699px){\n    div{\n        color: blue\n    }\n}\n</style>\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);